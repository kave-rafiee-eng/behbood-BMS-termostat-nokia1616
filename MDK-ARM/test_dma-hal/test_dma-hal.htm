<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [test_dma-hal\test_dma-hal.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image test_dma-hal\test_dma-hal.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060750: Last Updated: Sat Jul 30 11:42:24 2022
<BR><P>
<H3>Maximum Stack Usage =        232 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; seting_set_point &rArr; read_touch &rArr; refresh_home &rArr; lcd_put_number &rArr; put_char &rArr; nlcdPixel &rArr; _nlcdCmd1616 &rArr; _nlcdSend
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[10]">ADC1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[10]">ADC1_IRQHandler</a><BR>
 <LI><a href="#[1]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1]">NMI_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[10]">ADC1_IRQHandler</a> from startup_stm32f030x6.o(.text) referenced from startup_stm32f030x6.o(RESET)
 <LI><a href="#[d]">DMA1_Channel1_IRQHandler</a> from startup_stm32f030x6.o(.text) referenced from startup_stm32f030x6.o(RESET)
 <LI><a href="#[e]">DMA1_Channel2_3_IRQHandler</a> from stm32f0xx_it.o(i.DMA1_Channel2_3_IRQHandler) referenced from startup_stm32f030x6.o(RESET)
 <LI><a href="#[f]">DMA1_Channel4_5_IRQHandler</a> from startup_stm32f030x6.o(.text) referenced from startup_stm32f030x6.o(RESET)
 <LI><a href="#[a]">EXTI0_1_IRQHandler</a> from startup_stm32f030x6.o(.text) referenced from startup_stm32f030x6.o(RESET)
 <LI><a href="#[b]">EXTI2_3_IRQHandler</a> from startup_stm32f030x6.o(.text) referenced from startup_stm32f030x6.o(RESET)
 <LI><a href="#[c]">EXTI4_15_IRQHandler</a> from startup_stm32f030x6.o(.text) referenced from startup_stm32f030x6.o(RESET)
 <LI><a href="#[8]">FLASH_IRQHandler</a> from startup_stm32f030x6.o(.text) referenced from startup_stm32f030x6.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from stm32f0xx_it.o(i.HardFault_Handler) referenced from startup_stm32f030x6.o(RESET)
 <LI><a href="#[17]">I2C1_IRQHandler</a> from startup_stm32f030x6.o(.text) referenced from startup_stm32f030x6.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from stm32f0xx_it.o(i.NMI_Handler) referenced from startup_stm32f030x6.o(RESET)
 <LI><a href="#[4]">PendSV_Handler</a> from stm32f0xx_it.o(i.PendSV_Handler) referenced from startup_stm32f030x6.o(RESET)
 <LI><a href="#[9]">RCC_IRQHandler</a> from startup_stm32f030x6.o(.text) referenced from startup_stm32f030x6.o(RESET)
 <LI><a href="#[7]">RTC_IRQHandler</a> from startup_stm32f030x6.o(.text) referenced from startup_stm32f030x6.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_stm32f030x6.o(.text) referenced from startup_stm32f030x6.o(RESET)
 <LI><a href="#[18]">SPI1_IRQHandler</a> from startup_stm32f030x6.o(.text) referenced from startup_stm32f030x6.o(RESET)
 <LI><a href="#[3]">SVC_Handler</a> from stm32f0xx_it.o(i.SVC_Handler) referenced from startup_stm32f030x6.o(RESET)
 <LI><a href="#[5]">SysTick_Handler</a> from stm32f0xx_it.o(i.SysTick_Handler) referenced from startup_stm32f030x6.o(RESET)
 <LI><a href="#[1b]">SystemInit</a> from system_stm32f0xx.o(i.SystemInit) referenced from startup_stm32f030x6.o(.text)
 <LI><a href="#[14]">TIM14_IRQHandler</a> from stm32f0xx_it.o(i.TIM14_IRQHandler) referenced from startup_stm32f030x6.o(RESET)
 <LI><a href="#[15]">TIM16_IRQHandler</a> from startup_stm32f030x6.o(.text) referenced from startup_stm32f030x6.o(RESET)
 <LI><a href="#[16]">TIM17_IRQHandler</a> from startup_stm32f030x6.o(.text) referenced from startup_stm32f030x6.o(RESET)
 <LI><a href="#[11]">TIM1_BRK_UP_TRG_COM_IRQHandler</a> from startup_stm32f030x6.o(.text) referenced from startup_stm32f030x6.o(RESET)
 <LI><a href="#[12]">TIM1_CC_IRQHandler</a> from startup_stm32f030x6.o(.text) referenced from startup_stm32f030x6.o(RESET)
 <LI><a href="#[13]">TIM3_IRQHandler</a> from startup_stm32f030x6.o(.text) referenced from startup_stm32f030x6.o(RESET)
 <LI><a href="#[19]">USART1_IRQHandler</a> from stm32f0xx_it.o(i.USART1_IRQHandler) referenced from startup_stm32f030x6.o(RESET)
 <LI><a href="#[6]">WWDG_IRQHandler</a> from startup_stm32f030x6.o(.text) referenced from startup_stm32f030x6.o(RESET)
 <LI><a href="#[1c]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_stm32f030x6.o(.text)
 <LI><a href="#[1d]">fputc</a> from retarget_io.o(i.fputc) referenced from printf8.o(i.__0printf$8)
 <LI><a href="#[1a]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[1c]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030x6.o(.text)
</UL>
<P><STRONG><a name="[89]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[1e]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[2d]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[8a]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[8b]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[8c]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[8d]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[8e]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32f030x6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030x6.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>ADC1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030x6.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030x6.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030x6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030x6.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>DMA1_Channel4_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030x6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030x6.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>EXTI0_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030x6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030x6.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>EXTI2_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030x6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030x6.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>EXTI4_15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030x6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030x6.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030x6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030x6.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030x6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030x6.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030x6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030x6.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030x6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030x6.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030x6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030x6.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>TIM16_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030x6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030x6.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>TIM17_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030x6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030x6.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>TIM1_BRK_UP_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030x6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030x6.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030x6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030x6.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030x6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030x6.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030x6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030x6.o(RESET)
</UL>
<P><STRONG><a name="[8f]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[21]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_Init1msTick
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_char
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[90]"></a>__aeabi_idiv</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, idiv.o(.text), UNUSED)

<P><STRONG><a name="[20]"></a>__aeabi_idivmod</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, idiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_put_number
</UL>

<P><STRONG><a name="[22]"></a>__aeabi_uldivmod</STRONG> (Thumb, 96 bytes, Stack size 48 bytes, uldiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[23]"></a>__aeabi_llsr</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, llushr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[91]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[26]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[92]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[93]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[25]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[3f]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_touch_led
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_ini
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_ini
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q_ini
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ini
</UL>

<P><STRONG><a name="[94]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[27]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[86]"></a>strstr</STRONG> (Thumb, 40 bytes, Stack size 12 bytes, strstr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strfind
</UL>

<P><STRONG><a name="[62]"></a>strlen</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, strlen.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;esp_recive_number
</UL>

<P><STRONG><a name="[6c]"></a>strcmp</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, strcmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w25q
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_put_picture
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;help
</UL>

<P><STRONG><a name="[28]"></a>atoi</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, atoi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = atoi &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;esp_recive_number
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scan_uart_get_int
</UL>

<P><STRONG><a name="[24]"></a>__aeabi_llsl</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, llshl.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[95]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[2a]"></a>strtol</STRONG> (Thumb, 108 bytes, Stack size 32 bytes, strtol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_strtoul
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>

<P><STRONG><a name="[1f]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[96]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[2b]"></a>__rt_ctype_table</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ctype_o.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
</UL>

<P><STRONG><a name="[2c]"></a>_strtoul</STRONG> (Thumb, 166 bytes, Stack size 40 bytes, _strtoul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_chval
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
</UL>

<P><STRONG><a name="[2e]"></a>_chval</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, _chval.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_strtoul
</UL>

<P><STRONG><a name="[76]"></a>BMS_TERMOSTAT_INI</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, bms_termostat.o(i.BMS_TERMOSTAT_INI))
<BR><BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e]"></a>DMA1_Channel2_3_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f0xx_it.o(i.DMA1_Channel2_3_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030x6.o(RESET)
</UL>
<P><STRONG><a name="[77]"></a>ESP_ini</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, main_esp.o(i.ESP_ini))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ESP_ini
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2f]"></a>ESP_main</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, main_esp.o(i.ESP_main))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ESP_main &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7b]"></a>ESP_timer</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, main_esp.o(i.ESP_timer))
<BR><BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3a]"></a>HAL_IncTick</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f0xx_hal.o(i.HAL_IncTick))
<BR><BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[31]"></a>HAL_Init</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, stm32f0xx_hal.o(i.HAL_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = HAL_Init &rArr; HAL_InitTick &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MspInit
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hard_ini
</UL>

<P><STRONG><a name="[32]"></a>HAL_InitTick</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, stm32f0xx_hal.o(i.HAL_InitTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = HAL_InitTick &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Config
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[33]"></a>HAL_MspInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f0xx_hal.o(i.HAL_MspInit))
<BR><BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[35]"></a>HAL_NVIC_SetPriority</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, stm32f0xx_hal_cortex.o(i.HAL_NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[34]"></a>HAL_SYSTICK_Config</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, stm32f0xx_hal_cortex.o(i.HAL_SYSTICK_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_SYSTICK_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, stm32f0xx_it.o(i.HardFault_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HardFault_Handler &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030x6.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>LL_GPIO_Init</STRONG> (Thumb, 174 bytes, Stack size 20 bytes, stm32f0xx_ll_gpio_2.o(i.LL_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = LL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_touch_led
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_ini
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_ini
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q_ini
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ini
</UL>

<P><STRONG><a name="[37]"></a>LL_Init1msTick</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, stm32f0xx_ll_utils_1.o(i.LL_Init1msTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = LL_Init1msTick &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clock_ini
</UL>

<P><STRONG><a name="[57]"></a>LL_SetSystemCoreClock</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f0xx_ll_utils_1.o(i.LL_SetSystemCoreClock))
<BR><BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clock_ini
</UL>

<P><STRONG><a name="[7d]"></a>LL_mDelay</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, stm32f0xx_ll_utils_1.o(i.LL_mDelay))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LL_mDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startup_lcd_picture
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nlcdInit
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_touch
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scan_uart_get_int
</UL>

<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f0xx_it.o(i.NMI_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030x6.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f0xx_it.o(i.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030x6.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>SPI_w25q</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, spi_stm32f030.o(i.SPI_w25q))
<BR><BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q_WritePage
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q_ReadPage
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q_EraseSector4KB
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q_WritePage_start
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q_Read_StatusReg
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q_Read_Manufact_Device_ID
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q_ReadPage_start
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q_Enable_Write
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_picture_from_spi_flash
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w25q
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_put_picture
</UL>

<P><STRONG><a name="[3]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f0xx_it.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030x6.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>Square</STRONG> (Thumb, 56 bytes, Stack size 40 bytes, lcd_nokia1616_my_fun.o(i.Square))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = Square &rArr; nlcdPixel &rArr; _nlcdCmd1616 &rArr; _nlcdSend
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nlcdPixel
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_put_number
</UL>

<P><STRONG><a name="[5]"></a>SysTick_Handler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, stm32f0xx_it.o(i.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SysTick_Handler &rArr; timer_basic_manager
</UL>
<BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_basic_manager
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_IncTick
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030x6.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>SystemInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, system_stm32f0xx.o(i.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030x6.o(.text)
</UL>
<P><STRONG><a name="[14]"></a>TIM14_IRQHandler</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, stm32f0xx_it.o(i.TIM14_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TIM14_IRQHandler &rArr; timer_second_manager
</UL>
<BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_second_manager
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030x6.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>USART1_IRQHandler</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, stm32f0xx_it.o(i.USART1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USART1_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_manager_interupt_rx
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030x6.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>USART_ini</STRONG> (Thumb, 142 bytes, Stack size 48 bytes, usart_stm32f030.o(i.USART_ini))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = USART_ini &rArr; LL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_Init
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hard_ini
</UL>

<P><STRONG><a name="[41]"></a>W25Q_Enable_Write</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, w25q.o(i.W25Q_Enable_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = W25Q_Enable_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_w25q
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q_WritePage
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q_EraseSector4KB
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q_WritePage_start
</UL>

<P><STRONG><a name="[43]"></a>W25Q_EraseSector4KB</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, w25q.o(i.W25Q_EraseSector4KB))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = W25Q_EraseSector4KB &rArr; W25Q_WaitBusy &rArr; W25Q_Read_StatusReg
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_w25q
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q_WaitBusy
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q_Enable_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w25q
</UL>

<P><STRONG><a name="[45]"></a>W25Q_ReadPage</STRONG> (Thumb, 68 bytes, Stack size 32 bytes, w25q.o(i.W25Q_ReadPage))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = W25Q_ReadPage
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_w25q
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w25q_put_page
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w25q
</UL>

<P><STRONG><a name="[46]"></a>W25Q_ReadPage_start</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, w25q.o(i.W25Q_ReadPage_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = W25Q_ReadPage_start
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_w25q
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_picture_from_spi_flash
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_put_picture
</UL>

<P><STRONG><a name="[47]"></a>W25Q_Read_Manufact_Device_ID</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, w25q.o(i.W25Q_Read_Manufact_Device_ID))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = W25Q_Read_Manufact_Device_ID
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_w25q
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_ini
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_w25q_register
</UL>

<P><STRONG><a name="[49]"></a>W25Q_Read_StatusReg</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, w25q.o(i.W25Q_Read_StatusReg))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = W25Q_Read_StatusReg
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_w25q
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q_WaitBusy
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_w25q_register
</UL>

<P><STRONG><a name="[44]"></a>W25Q_WaitBusy</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, w25q.o(i.W25Q_WaitBusy))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = W25Q_WaitBusy &rArr; W25Q_Read_StatusReg
</UL>
<BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q_Read_StatusReg
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q_WritePage
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q_EraseSector4KB
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w25q
</UL>

<P><STRONG><a name="[4a]"></a>W25Q_WritePage</STRONG> (Thumb, 74 bytes, Stack size 32 bytes, w25q.o(i.W25Q_WritePage))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = W25Q_WritePage &rArr; W25Q_WaitBusy &rArr; W25Q_Read_StatusReg
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_w25q
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q_WaitBusy
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q_Enable_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w25q
</UL>

<P><STRONG><a name="[4b]"></a>W25Q_WritePage_start</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, w25q.o(i.W25Q_WritePage_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = W25Q_WritePage_start &rArr; W25Q_Enable_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_w25q
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q_Enable_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w25q
</UL>

<P><STRONG><a name="[4c]"></a>W25Q_ini</STRONG> (Thumb, 92 bytes, Stack size 48 bytes, w25q.o(i.W25Q_ini))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = W25Q_ini &rArr; LL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_Init
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hard_ini
</UL>

<P><STRONG><a name="[4d]"></a>__0printf$8</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, printf8.o(i.__0printf$8), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[97]"></a>__1printf$8</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf8.o(i.__0printf$8), UNUSED)

<P><STRONG><a name="[30]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf8.o(i.__0printf$8))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;interupt_soft_uart
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debuge_uart
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESP_main
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_picture_from_spi_flash
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_touch
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w25q_put_page
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w25q
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scan_uart_get_int
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_w25q_register
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_put_picture
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;help
</UL>

<P><STRONG><a name="[29]"></a>__aeabi_errno_addr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, errno.o(i.__aeabi_errno_addr))
<BR><BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_strtoul
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>

<P><STRONG><a name="[98]"></a>__rt_errno_addr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, errno.o(i.__aeabi_errno_addr), UNUSED)

<P><STRONG><a name="[99]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[9a]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[9b]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[4f]"></a>_nlcdCmd1616</STRONG> (Thumb, 52 bytes, Stack size 12 bytes, nokia1661_lcd_driver.o(i._nlcdCmd1616))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = _nlcdCmd1616 &rArr; _nlcdSend
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_nlcdSend
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nlcdPixel
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_nlcdSetWindow
</UL>

<P><STRONG><a name="[50]"></a>_nlcdSend</STRONG> (Thumb, 168 bytes, Stack size 16 bytes, nokia1661_lcd_driver.o(i._nlcdSend))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _nlcdSend
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nlcdInit
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_picture_from_spi_flash
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_put_picture
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nlcdSetOrientation
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nlcdPixel
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_nlcdSetWindow
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_nlcdSendCmd
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_nlcdCmd1616
</UL>

<P><STRONG><a name="[51]"></a>_nlcdSendCmd</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, nokia1661_lcd_driver.o(i._nlcdSendCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = _nlcdSendCmd &rArr; _nlcdSend
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_nlcdSend
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_picture_from_spi_flash
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_put_picture
</UL>

<P><STRONG><a name="[52]"></a>_nlcdSetWindow</STRONG> (Thumb, 42 bytes, Stack size 12 bytes, nokia1661_lcd_driver.o(i._nlcdSetWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _nlcdSetWindow &rArr; _nlcdCmd1616 &rArr; _nlcdSend
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_nlcdSend
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_nlcdCmd1616
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_picture_from_spi_flash
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_put_picture
</UL>

<P><STRONG><a name="[68]"></a>adc_calibre</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, adc_stm32f030.o(i.adc_calibre))
<BR><BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hard_ini
</UL>

<P><STRONG><a name="[55]"></a>adc_ini</STRONG> (Thumb, 100 bytes, Stack size 48 bytes, adc_stm32f030.o(i.adc_ini))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = adc_ini &rArr; LL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_Init
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hard_ini
</UL>

<P><STRONG><a name="[88]"></a>clear_temp_ram</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, pc_com_lcd.o(i.clear_temp_ram))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = clear_temp_ram
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w25q
</UL>

<P><STRONG><a name="[56]"></a>clock_ini</STRONG> (Thumb, 150 bytes, Stack size 8 bytes, cortex_stm32f030.o(i.clock_ini))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = clock_ini &rArr; LL_Init1msTick &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_SetSystemCoreClock
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_Init1msTick
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hard_ini
</UL>

<P><STRONG><a name="[5f]"></a>clr_str_rx</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, pc_com_lcd.o(i.clr_str_rx))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = clr_str_rx
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debuge_uart
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w25q_put_page
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w25q
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scan_uart_get_int
</UL>

<P><STRONG><a name="[58]"></a>dark_mode_manage</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, bms_termostat.o(i.dark_mode_manage))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = dark_mode_manage &rArr; refresh_home &rArr; lcd_put_number &rArr; put_char &rArr; nlcdPixel &rArr; _nlcdCmd1616 &rArr; _nlcdSend
</UL>
<BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refresh_home
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_picture_from_spi_flash
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5b]"></a>debuge_uart</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, pc_com_lcd.o(i.debuge_uart))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = debuge_uart &rArr; w25q &rArr; scan_uart_get_int &rArr; atoi &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w25q
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_put_picture
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;help
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clr_str_rx
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[66]"></a>dma_ini</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, cortex_stm32f030.o(i.dma_ini))
<BR><BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hard_ini
</UL>

<P><STRONG><a name="[60]"></a>esp_recive_number</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, main_esp.o(i.esp_recive_number))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = esp_recive_number &rArr; atoi &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strfind
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;interupt_soft_uart
</UL>

<P><STRONG><a name="[1d]"></a>fputc</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, retarget_io.o(i.fputc))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = fputc &rArr; stdout_putchar &rArr; soft_uart_send_byte
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stdout_putchar
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printf8.o(i.__0printf$8)
</UL>
<P><STRONG><a name="[64]"></a>gpio_ini</STRONG> (Thumb, 142 bytes, Stack size 48 bytes, gpio_stm32f030.o(i.gpio_ini))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = gpio_ini &rArr; LL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_Init
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hard_ini
</UL>

<P><STRONG><a name="[65]"></a>hard_ini</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, main.o(i.hard_ini))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = hard_ini &rArr; init_touch_led &rArr; LL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tim14_ini
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_ini
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;soft_uart_ini
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_ini
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_touch_led
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_ini
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_ini
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clock_ini
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_ini
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_calibre
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q_ini
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ini
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5c]"></a>help</STRONG> (Thumb, 104 bytes, Stack size 8 bytes, pc_com_lcd.o(i.help))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = help &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debuge_uart
</UL>

<P><STRONG><a name="[81]"></a>ini_cpu_timer</STRONG> (Thumb, 296 bytes, Stack size 16 bytes, cpu_timer.o(i.ini_cpu_timer))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ini_cpu_timer
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;soft_ini
</UL>

<P><STRONG><a name="[6a]"></a>init_touch_led</STRONG> (Thumb, 182 bytes, Stack size 48 bytes, touch_bs813.o(i.init_touch_led))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = init_touch_led &rArr; LL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_Init
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hard_ini
</UL>

<P><STRONG><a name="[6d]"></a>interupt_soft_uart</STRONG> (Thumb, 390 bytes, Stack size 48 bytes, main_esp.o(i.interupt_soft_uart))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = interupt_soft_uart &rArr; refresh_data &rArr; lcd_put_number &rArr; put_char &rArr; nlcdPixel &rArr; _nlcdCmd1616 &rArr; _nlcdSend
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;soft_uart_rx_str_clear
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strfind
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;esp_recive_number
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refresh_data
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[70]"></a>lcd_put_number</STRONG> (Thumb, 110 bytes, Stack size 40 bytes, lcd_nokia1616_my_fun.o(i.lcd_put_number))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = lcd_put_number &rArr; put_char &rArr; nlcdPixel &rArr; _nlcdCmd1616 &rArr; _nlcdSend
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_char
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Square
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;seting_set_point
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refresh_home
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refresh_data
</UL>

<P><STRONG><a name="[5e]"></a>lcd_put_picture</STRONG> (Thumb, 216 bytes, Stack size 24 bytes, pc_com_lcd.o(i.lcd_put_picture))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = lcd_put_picture &rArr; scan_uart_get_int &rArr; atoi &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_w25q
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q_ReadPage_start
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scan_uart_get_int
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nlcdGetWidth
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nlcdGetHeight
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_nlcdSetWindow
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_nlcdSendCmd
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_nlcdSend
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debuge_uart
</UL>

<P><STRONG><a name="[1a]"></a>main</STRONG> (Thumb, 110 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = main &rArr; seting_set_point &rArr; read_touch &rArr; refresh_home &rArr; lcd_put_number &rArr; put_char &rArr; nlcdPixel &rArr; _nlcdCmd1616 &rArr; _nlcdSend
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startup_lcd_picture
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;soft_uart_rx_check
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;seting_set_point
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refresh_home
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;interupt_soft_uart
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debuge_uart
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dark_mode_manage
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESP_timer
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESP_main
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESP_ini
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMS_TERMOSTAT_INI
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;soft_ini
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hard_ini
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[73]"></a>nlcdGetHeight</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, nokia1661_lcd_driver.o(i.nlcdGetHeight))
<BR><BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_picture_from_spi_flash
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_put_picture
</UL>

<P><STRONG><a name="[74]"></a>nlcdGetWidth</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, nokia1661_lcd_driver.o(i.nlcdGetWidth))
<BR><BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_picture_from_spi_flash
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_put_picture
</UL>

<P><STRONG><a name="[7c]"></a>nlcdInit</STRONG> (Thumb, 190 bytes, Stack size 16 bytes, nokia1661_lcd_driver.o(i.nlcdInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = nlcdInit &rArr; _nlcdSend
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_mDelay
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_nlcdSend
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;soft_ini
</UL>

<P><STRONG><a name="[39]"></a>nlcdPixel</STRONG> (Thumb, 54 bytes, Stack size 12 bytes, nokia1661_lcd_driver.o(i.nlcdPixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = nlcdPixel &rArr; _nlcdCmd1616 &rArr; _nlcdSend
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_nlcdSend
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_nlcdCmd1616
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_char
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Square
</UL>

<P><STRONG><a name="[7e]"></a>nlcdSetOrientation</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, nokia1661_lcd_driver.o(i.nlcdSetOrientation))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = nlcdSetOrientation &rArr; _nlcdSend
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_nlcdSend
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_picture_from_spi_flash
</UL>

<P><STRONG><a name="[67]"></a>nvic_ini</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, cortex_stm32f030.o(i.nvic_ini))
<BR><BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hard_ini
</UL>

<P><STRONG><a name="[71]"></a>put_char</STRONG> (Thumb, 168 bytes, Stack size 72 bytes, lcd_nokia1616_my_fun.o(i.put_char))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = put_char &rArr; nlcdPixel &rArr; _nlcdCmd1616 &rArr; _nlcdSend
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nlcdPixel
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_put_number
</UL>

<P><STRONG><a name="[59]"></a>put_picture_from_spi_flash</STRONG> (Thumb, 182 bytes, Stack size 24 bytes, lcd_nokia1616_my_fun.o(i.put_picture_from_spi_flash))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = put_picture_from_spi_flash &rArr; _nlcdSetWindow &rArr; _nlcdCmd1616 &rArr; _nlcdSend
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_w25q
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q_ReadPage_start
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nlcdSetOrientation
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nlcdGetWidth
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nlcdGetHeight
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_nlcdSetWindow
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_nlcdSendCmd
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_nlcdSend
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startup_lcd_picture
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refresh_home
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dark_mode_manage
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refresh_data
</UL>

<P><STRONG><a name="[7f]"></a>put_w25q_register</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, pc_com_lcd.o(i.put_w25q_register))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = put_w25q_register &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q_Read_StatusReg
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q_Read_Manufact_Device_ID
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w25q
</UL>

<P><STRONG><a name="[84]"></a>read_gpio</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, main.o(i.read_gpio))
<BR><BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;soft_uart_get_byte
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;soft_uart_rx_check
</UL>

<P><STRONG><a name="[80]"></a>read_touch</STRONG> (Thumb, 340 bytes, Stack size 24 bytes, touch_bs813.o(i.read_touch))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = read_touch &rArr; refresh_home &rArr; lcd_put_number &rArr; put_char &rArr; nlcdPixel &rArr; _nlcdCmd1616 &rArr; _nlcdSend
</UL>
<BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refresh_home
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_mDelay
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;seting_set_point
</UL>

<P><STRONG><a name="[6f]"></a>refresh_data</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, bms_termostat.o(i.refresh_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = refresh_data &rArr; lcd_put_number &rArr; put_char &rArr; nlcdPixel &rArr; _nlcdCmd1616 &rArr; _nlcdSend
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_picture_from_spi_flash
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_put_number
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;interupt_soft_uart
</UL>

<P><STRONG><a name="[5a]"></a>refresh_home</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, bms_termostat.o(i.refresh_home))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = refresh_home &rArr; lcd_put_number &rArr; put_char &rArr; nlcdPixel &rArr; _nlcdCmd1616 &rArr; _nlcdSend
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_picture_from_spi_flash
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_put_number
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;seting_set_point
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dark_mode_manage
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_touch
</UL>

<P><STRONG><a name="[72]"></a>scan_uart_get_int</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, pc_com_lcd.o(i.scan_uart_get_int))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = scan_uart_get_int &rArr; atoi &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clr_str_rx
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_mDelay
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w25q
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_put_picture
</UL>

<P><STRONG><a name="[7a]"></a>seting_set_point</STRONG> (Thumb, 542 bytes, Stack size 32 bytes, bms_termostat.o(i.seting_set_point))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = seting_set_point &rArr; read_touch &rArr; refresh_home &rArr; lcd_put_number &rArr; put_char &rArr; nlcdPixel &rArr; _nlcdCmd1616 &rArr; _nlcdSend
</UL>
<BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refresh_home
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_put_number
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_touch
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[75]"></a>soft_ini</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, main.o(i.soft_ini))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = soft_ini &rArr; nlcdInit &rArr; _nlcdSend
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nlcdInit
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ini_cpu_timer
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[82]"></a>soft_uart_get_byte</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, usart_stm32f030.o(i.soft_uart_get_byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = soft_uart_get_byte
</UL>
<BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_delay
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_gpio
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;soft_uart_rx_check
</UL>

<P><STRONG><a name="[6b]"></a>soft_uart_ini</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, usart_stm32f030.o(i.soft_uart_ini))
<BR><BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hard_ini
</UL>

<P><STRONG><a name="[79]"></a>soft_uart_rx_check</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, usart_stm32f030.o(i.soft_uart_rx_check))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = soft_uart_rx_check &rArr; soft_uart_get_byte
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;soft_uart_get_byte
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_gpio
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6e]"></a>soft_uart_rx_str_clear</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, usart_stm32f030.o(i.soft_uart_rx_str_clear))
<BR><BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;interupt_soft_uart
</UL>

<P><STRONG><a name="[85]"></a>soft_uart_send_byte</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, usart_stm32f030.o(i.soft_uart_send_byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = soft_uart_send_byte
</UL>
<BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_delay
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stdout_putchar
</UL>

<P><STRONG><a name="[48]"></a>spi_ini</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, spi_stm32f030.o(i.spi_ini))
<BR><BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hard_ini
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q_Read_Manufact_Device_ID
</UL>

<P><STRONG><a name="[78]"></a>startup_lcd_picture</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, bms_termostat.o(i.startup_lcd_picture))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = startup_lcd_picture &rArr; put_picture_from_spi_flash &rArr; _nlcdSetWindow &rArr; _nlcdCmd1616 &rArr; _nlcdSend
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_picture_from_spi_flash
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_mDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[63]"></a>stdout_putchar</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, stdout_user.o(i.stdout_putchar))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = stdout_putchar &rArr; soft_uart_send_byte
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;soft_uart_send_byte
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>

<P><STRONG><a name="[61]"></a>strfind</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, main_esp.o(i.strfind))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = strfind &rArr; strstr
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;interupt_soft_uart
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;esp_recive_number
</UL>

<P><STRONG><a name="[69]"></a>tim14_ini</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, timer_stm32f030.o(i.tim14_ini))
<BR><BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hard_ini
</UL>

<P><STRONG><a name="[3b]"></a>timer_basic_manager</STRONG> (Thumb, 176 bytes, Stack size 24 bytes, cpu_timer.o(i.timer_basic_manager))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = timer_basic_manager
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[3c]"></a>timer_second_manager</STRONG> (Thumb, 184 bytes, Stack size 12 bytes, cpu_timer.o(i.timer_second_manager))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = timer_second_manager
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM14_IRQHandler
</UL>

<P><STRONG><a name="[83]"></a>uart_delay</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, usart_stm32f030.o(i.uart_delay))
<BR><BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;soft_uart_send_byte
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;soft_uart_get_byte
</UL>

<P><STRONG><a name="[3d]"></a>uart_manager_interupt_rx</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, pc_com_lcd.o(i.uart_manager_interupt_rx))
<BR><BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[5d]"></a>w25q</STRONG> (Thumb, 872 bytes, Stack size 32 bytes, pc_com_lcd.o(i.w25q))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = w25q &rArr; scan_uart_get_int &rArr; atoi &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_w25q
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q_WritePage
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q_ReadPage
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q_EraseSector4KB
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q_WritePage_start
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q_WaitBusy
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w25q_put_page
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scan_uart_get_int
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_w25q_register
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clr_str_rx
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_temp_ram
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debuge_uart
</UL>

<P><STRONG><a name="[87]"></a>w25q_put_page</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, pc_com_lcd.o(i.w25q_put_page))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = w25q_put_page &rArr; W25Q_ReadPage
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q_ReadPage
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clr_str_rx
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w25q
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[36]"></a>__NVIC_SetPriority</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, stm32f0xx_hal_cortex.o(i.__NVIC_SetPriority))
<BR><BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Config
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
</UL>

<P><STRONG><a name="[4e]"></a>_printf_core</STRONG> (Thumb, 1020 bytes, Stack size 104 bytes, printf8.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf$8
</UL>

<P><STRONG><a name="[54]"></a>_printf_post_padding</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, printf8.o(i._printf_post_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[53]"></a>_printf_pre_padding</STRONG> (Thumb, 44 bytes, Stack size 40 bytes, printf8.o(i._printf_pre_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
